<link rel="stylesheet" type="text/css" href="/public/css/lesson.css">

<div>
    <p class="h-1">Temel Giriş - Çıkış İşlemleri (Basic IO)</p> 
</div>

<div> 
    <p>
        Başlamadan önce, masaüstümüze vaya dilediğimiz herhangi bir konuma “C_Dersleri” adında bir klasör oluşturalım. Çalışmalarımızı bu klasör içerisine kaydedeceğiz. (Bu konuda ihtiyacınız varsa daha önce yazdığım “Dosya ve Klasör Yönetimi” isimli yazıyı okuyabilirsiniz. Yeterli gelmediği takdirde bu konuda başka kaynaklara başvurmanızı ve yazılım hayatınız boyunca size her zaman gerekli olacak bu bilgileri edinip pekiştirmenizi şiddetle tavsiye ederim. İnternette istemediğiniz kadar çok yazılı ve görüntülü kaynak mevcut.)
    </p>
    <p>
        Şimdi, başlat notepad isimli uygulamayı çalıştıralım ve aşağıdaki kodları yazalım.
    </p>
    <p>
        <i><b>Not: </b>Bilgisayarlar, kod yazılımında söz dizimi (sintax) konusunda oldukça katıdırlar. Bu nedenle bu kodları yazarken noktalama işaretlerii dahil hiçbir hata yapmamanız önemli.</i>
    </p>     
</div>

<div>
    <p class="code">
        #include&lt;stdio&gt;<br/><br/>
        int main(){<br/>&emsp;printf("Merhaba Dünya");<br/>&emsp;return 0;<br/>}
    </p>
</div>

<div> 
    <p>
        Şimdi notepad programımızız Dosya menusundan “Kaydet” / “Farklı Kaydet” seçeneklerinden birine tiklayarak dosyamızı kaydedeceğiz. Dosyamızı kaydederken açılan pencereden “kayıt türü” seçeneğini “Tüm dosyalar (*.*)” olarak seçiyoruz ve programımızın adını belirleyip uzantısını .c yapıyoruz. (“MerhabaDunya.c”). Tabi kaydedeceğimiz yer olarak oluşturduğumuz klasörü seçmeyi de ihmal etmiyoruz.
    </p>
    <p>
        Yukarıdaki kod çalıştırıldığında konsol ekranına “Merhaba Dünya” yazdırılacaktır. Fakat dosyamız (programımız) bu haliyle henüz çalıştırılmaya hazır değil. Biraz daha sabır.
    </p>
    <p>
        Bilgisayarlar, kullandığı dil bize daha yakın olan yüksek seviye dillere ait kodları doğrudan çalıştıramazlar. Onlar sadece makine dilinden, yani 0 ve 1 lerden anlar. Bu nedenle, yazdığımız kodların önce derleme (compile) adı verdiğimiz bir işlemden geçmesi ve makine diline dönüştürülmesi gerekir.
    </p>
    <p>
        Derleme işini yapan derleyici programlara “compiler” denir. C için internet üzerinden birçok Compiler bulabilirsiniz. Yazdığımız programlar işletim sistemi üzerinde çalıştığı için her işletim sisteminin kendisine özel derleyici programı vardır. Biz Windows İşletim sistemi kullandığımız için konuyu windows ekseninde anlatacağız. Kullandığınız işletim sistemi farklı ise biraz araştırma yapıp anlatılanları kendi işletim sisteminize uyarlamanız gerekecek. Eminim bu konuda da kaynak bulmakta zorlanmayacaksınız.
    </p>
    <p>
        Bu işlem için GCC adlı bir yazılım kullanacağız. GCC gelmiş geçmiş en iyi derleyicilerden biri olduğu gibi, özgür bir yazılımdır! Richard Stallman tarafından açık kaynak koduyla sunulmuştur ve arzu ettiğiniz takdirde, sonuna kadar değişiklik yapma imkanınız vardır.
    </p>
    <p>
        Şimdi <a href="https://sourceforge.net/projects/mingw/">buraya </a>tıklayarak minGV yazılımını indirip bilgisayarımıza kuralım. Dilerseniz <a href="https://sourceforge.net/projects/mingw/files/latest/download">buraya </a>tıklayarak doğrudan da indirebilirsiniz.
    </p> 
    <p>
        Artık hazırız. Şimdi oluşturduğunuz dosyanın (merhabaDunya.c) bulunduğu klasörü açın. Klasör içerisindeki herhangi bir noktaya sağ tıklayın ve “komut isteminde aç” veya “terminalde aç“ seçeneklerinden hangisini görüyorsanız tıklayın. Eğer açılan pencere “power shell” ekranı ise cmd yazıp entere basın. (Başlat menusunden komut istemi (command prompt) çalıştırıp cd komutu ile dosyanızın olduğu dizine de gelebilirsiniz.)
    </p>
    <p>Komut satırına</p>
    <p class="code">
        gcc merhabaDunya.c
    </p>
    <p>
        Yazarak programımızı derliyoruz. Derleme sonrası klasörünüzde a.exe isminde bir dosya oluşacak. “dir” komutu ile (dir yazıp enter tuşuna basarak) dosyalarınızı listeleyebilirsiniz. Eğer oluşacak dosyanızın a.exe olarak değil de başka bir isimle oluşmasını istiyorsanız o zaman gcc komutunu şöyle kullanmanız gerekecek.
    </p>
    <p class="code">
        gcc merhabaDunya.c merhabaDunya.exe
    </p>
    <p>
        Burada merhabaDunya.exe dilediğiniz ismi getirebilirsiniz. Uzantısı .exe olmak şartıyla.                
    </p>
    <p>
        Eğer şu ana kadar her şey yolunda gitti ise ilk programınızı çalışır hale getirmiş olmalısınız. Tebrikler. Bundan sonraki işlemlerimiz artık çok daha kolay ve hızlı olacak. Yolu yarıladık:) Programımızı test etmek için komut satırına ismini yazıp çalıştıralım.
    </p>
    <p class="code">
        merhabaDunya.exe
    </p>
    <p>
        ya da
    </p>
    <p class="code">
        merhabaDunya
    </p>
    <p><i><b>Dikkat </b>Programınızı grafik ekranınızdan mouse ile üzerine tıklayarak çalıştırdığınızda herhangi bir şey göremezsiniz ki bu normal ve beklenen bir durum. Çünkü programınız öyle hızlı çalışır ve konsol ekranınız öyle çabuk “Merhaba Dünya” yazısını görüntüler ve kapanır ki, hiçbir şey görebilmeniz mümkün olmaz. Bunun çözümünü de ileriki derslerimize bırakalım.</i></p>   
    <P>Son bir not: Betik diller adını verdiğimiz HTML, CSS, JavaScript, Java gibi programlama dilleri derleyiciye (compiler) ihtiyaç duymazlar. Bu onların herhangi bir derleme işleminden geçmeden doğrudan çalıştıkları anlamına gelmez tabi. Bu dillerle yazılan programlar C, C#, C++ gibi işletim sistemi üzerinde çalışmazlar. Bir internet tarayıcısı veya JavaVM (Java Virtual Machine) gibi aracı yazılımlar kullanırlar ve çalışırken de bu yazılımlara ihtiyaç duyarlar. Derleme işlemi bu programlar tarafından otomatik olarak yapılır. Bu nedenle JavaScriptte yazdığımız komutları çalıştırmak için internet tarayıcısı kullanmak zorunda kalıyoruz.</p>
</div>

<div style="height:25vh"></div>